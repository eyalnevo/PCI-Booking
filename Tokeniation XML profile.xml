<?xml version="1.0" encoding="utf-8" ?>
<transform xmlns="http://www.pcibooking.net/pciShieldProfiles" type="body">
  <!-- The content selector tells the profile where the card details are located within the XML. 
       In order to overcome the use of namespace within XML elements, we recommend using * (asterisks) or “*[local-name()=’ElementName’]” 
       instead of the name itself. An asterisk is used to designate one level down - regardless of the name of the element. 
       This example is based on an XML message where the card data is located in the 4th level of the XML under the element called “BankCard” 
       The interface for creating profiles, in the PCI Booking portal, includes an intelisense feature to assist you in creating the profile.       
       -->
  <content selector="/*/*/*/*[local-name()=’bankCard’]">
    <!-- The card number is listed in a sub element called “num” -->
    <number selector="*[local-name()=’num’]" />
    <!-- The expiration date - both month and year - is listed in one field, the “expiration” field. In this example, 
         the format of the expiration date is YYYYMM. In order to spilt the two components, you will need to use the substring command.
         The substring command has two parameters - the starting point (which is required) and the length (which is optional). 
         The starting character is 0 based. -->
    <expYear selector="*[local-name()=’expiration’]" substring="0,4" format="YYYY"></expYear> <!-- format options are "YY" and "YYYY"-->
    <expMonth selector="*[local-name()=’expiration’]" substring="5" format="MM"></expMonth> <!-- format options are "M" and "MM"-->
    <!-- In this example, the name on the card is listed in a sub-element of BankCard called “cardHolderName”.
         This is why we add another * (asterisks) to the element in order to go down a level. -->
    <nameOnCard selector="*/*[local-name()=’cardHolderName’]"></nameOnCard>
    <!-- The CVV is listed as an attribute (property) of the BankCard element -->
    <securityCode selector="/@cvv"/>
    <!-- In our example, the message does not contain a value for the issue number and so we will use a dummy field. -->
    <issueNumber selector="issue_number]"></issueNumber>
    <!-- In this example, the card type is listed as an attribute (property) of the BankCard element and the card type is also listed
         in shorthand form. I.e. "MC" = Master Card, "VI" = Visa, etc. This example will show how to create the mapping from the 
         built-in PCI Booking credit card type names and the shorthand card types listed in the message. -->
    <type selector="/@CardCode">
      <MasterCard>MC</MasterCard>
      <Visa>VI</Visa>
      <AMEX>AX</AMEX>
      <DinersClub>DC</DinersClub>
      <JCB>JC</JCB>
      <UnionPay>UP</UnionPay>
      <Discover>DS</Discover>
      <!-- You will need to add all of the cards that are possible to receive from this third party.
           If you do not provide a mapping of the card type name, and the name processed will not match those in the PCI Booking system,
           then the card token will have a type = "unspecified". -->
    </type>
  </content>
</transform>
